/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1800  // 600, 1200
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener {
    precisionnav {
        layers = <1>;
        input-processors = <&zip_xy_scaler 1 3>;
    };

    precisionnum {
        layers = <2>;
        input-processors = <&zip_xy_scaler 1 2>;
    };
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <2>; // 1
            time-to-max-speed-ms = <40>; // 40
            delay-ms = <0>; // 0
        };

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <170>;
            tapping-term-ms = <190>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 20 21 22 23 24 14 30 31 32 33 34 35 25 15 5 6 16 26 27 17 7 8 18 28 29 19 9>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 10 20 21 1 11 12 2 3 4 24 14 13 23 22 30 31 32 33 34 35 25 26 28 27 29 9 8 7 6 5 15>;
        };

        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        sk_mo: sk_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "SK_MO";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        langswitchcombo {
            bindings = <&kp LG(SPACE)>;
            key-positions = <3 13>;
            layers = <0>;
        };

        capswordcombo {
            bindings = <&caps_word>;
            key-positions = <26 27>;
            layers = <0>;
        };

        tabcombo {
            bindings = <&kp TAB>;
            key-positions = <6 16>;
            layers = <0>;
        };

        capslock {
            bindings = <&kp CAPS>;
            key-positions = <22 23>;
            layers = <0>;
        };

        nextsym {
            bindings = <&sl 3>;
            key-positions = <7 17>;
            layers = <0>;
        };

        togmouse {
            bindings = <&tog 4>;
            key-positions = <11 12 13>;
            layers = <0 4>;
        };

        tognav {
            bindings = <&tog 1>;
            key-positions = <17 18 16>;
            layers = <0 1>;
        };

        nextnum {
            bindings = <&sl 2>;
            key-positions = <2 12>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";
            bindings = <
  &kp Q             &kp W           &kp F               &kp P            &kp B                 &kp J        &kp L            &kp U      &kp Y    &kp SQT
  &mt LEFT_SHIFT A  &mt LEFT_GUI R  &mt LEFT_CONTROL S  &mt RIGHT_ALT T  &kp G                 &kp K        &kp N            &kp E      &kp I    &kp O
  &kp Z             &kp X           &kp C               &kp D            &kp V                 &kp M        &kp H            &kp COMMA  &kp DOT  &kp SEMI
                                    &lt 6 ESC           &lt 7 TAB        &sk_mo 2 BACKSPACE    &lt 3 SPACE  &lt 4 BACKSPACE  &lt 5 DEL
            >;
        };

        nav {
            display-name = "NAV";
            bindings = <
  &sk LGUI   &sk LALT      &sk LCTRL  &sk LSHFT       &none        &kp INS        &kp HOME      &kp UP       &kp END    &kp PG_UP
  &kp LGUI   &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &kp TAB      &kp CAPS       &kp LEFT      &kp DOWN     &kp RIGHT  &kp PG_DN
  &kp LC(Z)  &kp LC(X)     &kp LC(C)  &kp LC(V)       &kp LC(Y)    &none          &none         &none        &none      &none
                           &kp ESC    &kp SPACE       &kp ENTER    &kp LG(SPACE)  &kp LC(BSPC)  &kp LC(DEL)
            >;
        };

        num {
            display-name = "NUM";
            bindings = <
  &sk LGUI   &sk LALT       &sk LCTRL         &sk LSHFT      &kp LA(LS(TAB))    &kp KP_PLUS      &kp N7     &kp N8       &kp N9  &kp MINUS
  &kp LGUI   &kp LALT       &kp LCTRL         &kp LSHFT      &kp C_AL_CALC      &kp KP_ASTERISK  &kp N4     &kp N5       &kp N6  &kp KP_DIVIDE
  &kp LG(Z)  &kp LA(EQUAL)  &kp LC(NUMBER_1)  &kp LC(LS(V))  &kp LA(TAB)        &kp PERIOD       &kp N1     &kp N2       &kp N3  &kp COMMA
                            &kp ESC           &kp SPACE      &none              &kp NUMBER_0     &kp EQUAL  &kp PERCENT
            >;
        };

        sym {
            display-name = "SYM";
            bindings = <
  &kp GRAVE         &kp AMPERSAND         &kp STAR               &kp CARET          &kp EQUAL      &kp LEFT_BRACE   &kp MINUS          &sk RCTRL    &sk LEFT_ALT  &sk RIGHT_GUI
  &kp EXCL          &kp AT                &kp HASH               &kp DOLLAR         &kp PERCENT    &kp TAB          &kp RSHFT          &kp RCTRL    &kp LALT      &kp RGUI
  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp BSLH       &kp RIGHT_BRACE  &kp UNDER          &kp PIPE     &kp RALT      &none
                                          &kp ESC                &kp QUESTION       &kp SLASH      &none            &kp LC(BACKSPACE)  &kp LC(DEL)
            >;
        };

        mouse {
            display-name = "MSE";
            bindings = <
  &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &mkp MB4     &kp LS(LG(D))  &sk RIGHT_SHIFT  &sk RCTRL  &sk LEFT_ALT  &sk RIGHT_GUI
  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5     &kp LG(LS(S))  &kp RSHFT        &kp RCTRL  &kp LALT      &kp RGUI
  &kp LC(Z)       &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp LC(Y)    &kp LS(LG(T))  &mo 2            &mo 1      &kp RALT      &none
                                  &mkp MCLK       &mkp LCLK        &mkp RCLK    &kp ENTER      &kp BSPC         &kp DEL
            >;
        };

        fun {
            display-name = "FUN";
            bindings = <
  &kp F12  &kp F7  &kp F8     &kp F9       &kp PAUSE_BREAK    &none      &sk RIGHT_SHIFT  &sk RCTRL  &sk LEFT_ALT  &sk RIGHT_GUI
  &kp F11  &kp F4  &kp F5     &kp F6       &kp PRINTSCREEN    &none      &kp RSHFT        &kp RCTRL  &kp LALT      &kp RGUI
  &kp F10  &kp F1  &kp F2     &kp F3       &kp SLCK           &none      &none            &none      &kp RALT      &none
                   &kp K_APP  &kp LA(F11)  &kp LA(F12)        &kp ENTER  &kp BSPC         &none
            >;
        };

        blt {
            display-name = "BLT";
            bindings = <
  &sk LEFT_GUI  &sk LEFT_ALT  &sk LCTRL  &sk LEFT_SHIFT  &bootloader    &bt BT_CLR        &none         &none         &none         &none
  &kp LGUI      &kp LALT      &kp LCTRL  &kp LSHFT       &none          &none             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
  &none         &kp RALT      &none      &none           &none          &kp LG(LA(K))     &kp C_VOL_UP  &kp C_VOL_DN  &none         &bt BT_SEL 4
                              &none      &kp SPACE       &kp LA(TAB)    &kp C_PLAY_PAUSE  &kp C_PREV    &kp C_NEXT
            >;
        };

        navi {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &trans  &trans  &trans  &trans  &trans    &trans     &kp LEFT       &kp UP_ARROW  &kp DOWN_ARROW        &kp RIGHT
  &trans  &trans  &trans  &trans  &trans    &trans     &kp HOME       &kp PAGE_UP   &kp PAGE_DOWN         &kp END
                  &trans  &trans  &trans    &trans     &trans         &trans
            >;
        };

        layer_8 {
            bindings = <
  &kp F1  &kp F4  &kp F7  &kp F10  &trans    &trans  &trans  &trans  &trans  &trans
  &kp F2  &kp F5  &kp F8  &kp F11  &trans    &trans  &trans  &trans  &trans  &trans
  &kp F3  &kp F6  &kp F9  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans   &trans    &trans  &trans  &trans
            >;
        };
    };
};
